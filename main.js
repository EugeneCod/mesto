(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._host=e.host,this._token=e.token}var n,r;return n=t,(r=[{key:"_getJsonOrError",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"_getHeaders",value:function(){return{authorization:this._token,"Content-Type":"application/json"}}},{key:"getUserInfo",value:function(){return fetch("".concat(this._host,"/users/me"),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({name:e.name,about:e.about})}).then(this._getJsonOrError)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar "),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({avatar:e.avatar})}).then(this._getJsonOrError)}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"addCard",value:function(e){return fetch("".concat(this._host,"/cards"),{method:"POST",headers:this._getHeaders(),body:JSON.stringify({name:e.name,link:e.link})}).then(this._getJsonOrError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:this._getHeaders()})}},{key:"toggleLike",value:function(e,t){var n;return n=e?"DELETE":"PUT",fetch("".concat(this._host,"/cards/").concat(t,"/likes"),{method:"".concat(n),headers:this._getHeaders()}).then(this._getJsonOrError)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.config;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=document.querySelector(n.nameSelector),this.about=document.querySelector(n.aboutSelfSelector),this.profileImage=document.querySelector(n.profileImageSelector)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return this.userInfo={name:this.name.textContent,about:this.about.textContent}}},{key:"setUserInfo",value:function(e){this.name.textContent=e.name,this.about.textContent=e.about}},{key:"getUserAvatar",value:function(){return this.profileImage.src}},{key:"setUserAvatar",value:function(e){this.profileImage.src=e.avatar}},{key:"getUserId",value:function(){return this.id}},{key:"setUserId",value:function(e){this.id=e._id}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),o=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),a=document.querySelector(".profile__image"),c=".editing-form",u={cardTemplateSelector:"#card-template",contentTemplateSelector:".elements__element",buttonLikeSelector:".elements__button-like",likesCounterSelector:".elements__likes-counter",buttonDeleteSelector:".elements__button-delete",imageSelector:".elements__image",locationSelector:".elements__location",buttonLikeActiveClass:"elements__button-like_active"};function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){var n=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(n),this._popupOpenClass="popup_opened",this.open=this.open.bind(this),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this._buttonCLoseElement=this._popupElement.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add(this._popupOpenClass),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove(this._popupOpenClass),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("mousedown",(function(t){t.target!==t.currentTarget&&t.target!==e._buttonCLoseElement||e.close()}))}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}function _(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:n}))._imageElement=t._popupElement.querySelector(".popup__image"),t._captionElement=t._popupElement.querySelector(".popup__image-caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._imageElement.src=t,this._imageElement.alt=e,this._captionElement.textContent=e,h(m(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function O(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return w(e)}function w(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:n}))._handleFormSubmit=r,t._formElement=t._popupElement.querySelector(c),t._inputList=Array.from(t._formElement.querySelectorAll(".editing-form__input-line")),t._buttonSubmit=t._formElement.querySelector(".editing-form__button"),t._buttonInitialText=t._buttonSubmit.textContent,t.renderLoading=t.renderLoading.bind(w(t)),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){var n=t.value,r=t.name;e._inputValues[r]=n})),this._inputValues}},{key:"setinputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){var e=this;S(L(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){e._handleFormSubmit(t,e._getInputValues())}))}},{key:"renderLoading",value:function(e){this._buttonSubmit.textContent=e?"Сохранение...":this._buttonInitialText}},{key:"close",value:function(){S(L(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=T(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function q(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:n}))._formElement=t._popupElement.querySelector(c),t._handleFormSubmit=r,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;P(A(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._item)}))}},{key:"open",value:function(e){this._item=e,P(A(a.prototype),"open",this).call(this)}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._link=t.link,this._name=t.name,this._arrayOfLikes=t.likes,this.cardId=t._id,this.config=n,this._userId=r,this._cardOwnerId=t.owner._id,this._handleCardClick=o,this._handleDeleteCard=i,this._toggleLikeServer=a}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this.config.cardTemplateSelector).content.querySelector(this.config.contentTemplateSelector).cloneNode(!0)}},{key:"_toggleLike",value:function(){this._buttonLike.classList.toggle(this.config.buttonLikeActiveClass)}},{key:"_setEventListeners",value:function(){var e=this;this._elementImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._buttonDelete.addEventListener("click",(function(){e._handleDeleteCard(e)})),this._buttonLike.addEventListener("click",(function(){e._toggleLikeServer(e._isLiked,e.cardId).then((function(t){e._checkLiked(t.likes),e._toggleLike(),e._setLikesNumber(t.likes)})).catch((function(e){console.log(e)}))}))}},{key:"_setLikesNumber",value:function(e){this._likesCounter.textContent=e.length}},{key:"_checkLiked",value:function(e){var t=this;this._isLiked=e.some((function(e){return e._id===t._userId}))}},{key:"_checkRemoveDelButton",value:function(){this._cardOwnerId!==this._userId&&this._buttonDelete.remove()}},{key:"deleteCard",value:function(){this._element.remove()}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._buttonLike=this._element.querySelector(this.config.buttonLikeSelector),this._buttonDelete=this._element.querySelector(this.config.buttonDeleteSelector),this._elementImage=this._element.querySelector(this.config.imageSelector),this._elementName=this._element.querySelector(this.config.locationSelector),this._likesCounter=this._element.querySelector(this.config.likesCounterSelector),this._setEventListeners(),this._checkRemoveDelButton(),this._checkLiked(this._arrayOfLikes),this._isLiked&&this._toggleLike(),this._elementImage.src=this._link,this._elementImage.alt=this._name,this._elementName.textContent=this._name,this._setLikesNumber(this._arrayOfLikes),this._element}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e,t){"prepend"===t?this._container.prepend(e):"append"===t&&this._container.append(e)}},{key:"renderItem",value:function(e,t){this._renderer(e,t)}},{key:"renderItems",value:function(e,t){var n=this;e.forEach((function(e){n._renderer(e,t)}))}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var J=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),H(this,"_showInputError",(function(e,t){var n=r._formElement.querySelector("".concat(r._spanErrorSelector).concat(e.id));e.classList.add(r._inputErrorClass),n.textContent=t,n.classList.add(r._errorClass)})),H(this,"_hideInputError",(function(e){var t=r._formElement.querySelector("".concat(r._spanErrorSelector).concat(e.id));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),this._formElement=n,this._inputSelector=t.inputSelector,this._errorSelector=t.errorSelector,this._spanErrorSelector=t.spanErrorSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inactiveButtonClass=t.inactiveButtonClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var M,z={},$=new t({host:"https://mesto.nomoreparties.co/v1/cohort-47",token:"fecf0c0a-0938-47a0-bc3a-dfac6e5ffd59"}),G=new r({config:{nameSelector:".profile__name",aboutSelfSelector:".profile__about-self",profileImageSelector:".profile__image"}}),K=new b({popupSelector:".popup_contain_picture"}),Q=new C({popupSelector:".popup_contain_edit-profile",handleFormSubmit:function(e,t){e.preventDefault(),Q.renderLoading(!0),$.setUserInfo(t).then((function(e){G.setUserInfo(e),Q.close()})).catch((function(e){return console.log(e)})).finally((function(){Q.renderLoading(!1)}))}}),W=new C({popupSelector:".popup_contain_add-cards",handleFormSubmit:function(e,t){e.preventDefault(),W.renderLoading(!0),$.addCard(t).then((function(e){Z.renderItem(e,"prepend"),W.close()})).catch((function(e){return console.log(e)})).finally((function(){W.renderLoading(!1)}))}}),X=new C({popupSelector:".popup_contain_edit-avatar",handleFormSubmit:function(e,t){e.preventDefault(),X.renderLoading(!0),$.setAvatar(t).then((function(e){G.setUserAvatar(e),X.close()})).catch((function(e){return console.log(e)})).finally((function(){X.renderLoading(!1)}))}}),Y=new B({popupSelector:".popup_contain_confirm",handleFormSubmit:function(e){$.deleteCard(e.cardId).then((function(){e.deleteCard(),Y.close()})).catch((function(e){return console.log(e)}))}}),Z=new V({renderer:function(e,t){var n=G.getUserId(),r=new x(e,u,n,ee,te,ne).generateCard();Z.addItem(r,t)}},".elements"),ee=function(e,t){K.open(e,t)},te=function(e){Y.open(e)},ne=function(e,t){return $.toggleLike(e,t)};Promise.all([$.getUserInfo(),$.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?N(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];G.setUserInfo(o),G.setUserAvatar(o),G.setUserId(o),Z.renderItems(i,"append")})).catch((function(e){return console.log("".concat(e," при первичной загрузке данных"))})),o.addEventListener("click",(function(){var e=G.getUserInfo();Q.setinputValues(e),Q.open(),z.editingForm.resetValidation()})),a.addEventListener("click",(function(){X.open(),z["edit-avatar"].resetValidation()})),i.addEventListener("click",(function(){W.open(),z.addCards.resetValidation()})),K.setEventListeners(),Q.setEventListeners(),W.setEventListeners(),Y.setEventListeners(),X.setEventListeners(),M={formSelector:".editing-form",inputSelector:".editing-form__input-line",errorSelector:".editing-form__input-error",spanErrorSelector:".editing-form__input-error_for_",submitButtonSelector:".editing-form__button",inputErrorClass:"editing-form__input-line_type_error",errorClass:"editing-form__input-error_active",inactiveButtonClass:"editing-form__button_inactive"},Array.from(document.querySelectorAll(M.formSelector)).forEach((function(e){var t=new J(M,e),n=e.getAttribute("name");z[n]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,