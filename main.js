(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._host=e.host,this._token=e.token}var n,r;return n=t,(r=[{key:"_getJsonOrError",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"_getHeaders",value:function(){return{authorization:this._token,"Content-Type":"application/json"}}},{key:"getUserInfo",value:function(){return fetch("".concat(this._host,"/users/me"),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({name:e.name,about:e.about})}).then(this._getJsonOrError)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar "),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({avatar:e.avatar})}).then(this._getJsonOrError)}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"addCard",value:function(e){return fetch("".concat(this._host,"/cards"),{method:"POST",headers:this._getHeaders(),body:JSON.stringify({name:e.name,link:e.link})}).then(this._getJsonOrError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:this._getHeaders()})}},{key:"toggleLike",value:function(e,t){var n;return n=e?"DELETE":"PUT",fetch("".concat(this._host,"/cards/").concat(t,"/likes"),{method:"".concat(n),headers:this._getHeaders()}).then(this._getJsonOrError)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.config,r=t.fetchUserInfo,o=t.fetchUserAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=document.querySelector(n.nameSelector),this.about=document.querySelector(n.aboutSelfSelector),this.profileImage=document.querySelector(n.profileImageSelector),this.fetchUserInfo=r,this.fetchUserAvatar=o}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return this.userInfo={name:this.name.textContent,about:this.about.textContent}}},{key:"setUserInfoOnClient",value:function(e){this.name.textContent=e.name,this.about.textContent=e.about}},{key:"setUserInfoOnServer",value:function(e){var t=this;return this.fetchUserInfo(e).then((function(e){t.setUserInfoOnClient(e)})).catch((function(e){return console.log(e)}))}},{key:"getUserAvatar",value:function(){return this.profileImage.src}},{key:"setUserAvatarOnClient",value:function(e){this.profileImage.src=e.avatar}},{key:"setUserAvatarOnServer",value:function(e){var t=this;return this.fetchUserAvatar(e).then((function(e){t.setUserAvatarOnClient(e)})).catch((function(e){return console.log(e)}))}},{key:"getUserId",value:function(){return this.id}},{key:"setUserId",value:function(e){this.id=e._id}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),o=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),c=document.querySelector(".profile__image"),u=".editing-form",a={cardTemplateSelector:"#card-template",contentTemplateSelector:".elements__element",buttonLikeSelector:".elements__button-like",likesCounterSelector:".elements__likes-counter",buttonDeleteSelector:".elements__button-delete",imageSelector:".elements__image",locationSelector:".elements__location",buttonLikeActiveClass:"elements__button-like_active"};function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){var n=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(n),this._popupOpenClass="popup_opened",this.open=this.open.bind(this),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this._buttonCLoseElement=this._popupElement.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add(this._popupOpenClass),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove(this._popupOpenClass),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("mousedown",(function(t){t.target!==t.currentTarget&&t.target!==e._buttonCLoseElement||e.close()}))}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function c(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,{popupSelector:n}))._imageElement=t._popupElement.querySelector(".popup__image"),t._captionElement=t._popupElement.querySelector(".popup__image-caption"),t}return t=c,(n=[{key:"open",value:function(e,t){this._imageElement.src=t,this._imageElement.alt=e,this._captionElement.textContent=e,h(m(c.prototype),"open",this).call(this)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function O(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function c(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,{popupSelector:n}))._handleFormSubmit=r,t._formElement=t._popupElement.querySelector(u),t._inputList=Array.from(t._formElement.querySelectorAll(".editing-form__input-line")),t._buttonSubmit=t._formElement.querySelector(".editing-form__button"),t._buttonInitialText=t._buttonSubmit.textContent,t}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){var n=t.value,r=t.name;e._inputValues[r]=n})),this._inputValues}},{key:"setinputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){var e=this;S(w(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),new Promise((function(t,n){e._handleFormSubmit(e._getInputValues()).then((function(){e.renderLoading(!1)})).catch((function(e){return console.log(e)})).finally((function(){e.close()}))}))}))}},{key:"renderLoading",value:function(e){this._buttonSubmit.textContent=e?"Сохранение...":this._buttonInitialText}},{key:"close",value:function(){S(w(c.prototype),"close",this).call(this),this._formElement.reset()}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}function U(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function c(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,{popupSelector:n}))._formElement=t._popupElement.querySelector(u),t._handleFormSubmit=r,t}return t=c,(n=[{key:"setEventListeners",value:function(){var e=this;j(R(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._id,e._cardElement),e.close()}))}},{key:"open",value:function(e,t){this._cardElement=t,this._id=e,j(R(c.prototype),"open",this).call(this)}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n,r,o,i,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._link=t.link,this._name=t.name,this._arrayOfLikes=t.likes,this._cardId=t._id,this.config=n,this._userId=r,this._cardOwnerId=t.owner._id,this._handleCardClick=o,this._handleDeleteCard=i,this._toggleLikeServer=c}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this.config.cardTemplateSelector).content.querySelector(this.config.contentTemplateSelector).cloneNode(!0)}},{key:"_toggleLike",value:function(){this._buttonLike.classList.toggle(this.config.buttonLikeActiveClass)}},{key:"_setEventListeners",value:function(){var e=this;this._elementImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._buttonDelete.addEventListener("click",(function(){e._handleDeleteCard(e._cardId,e._element)})),this._buttonLike.addEventListener("click",(function(){e._toggleLikeServer(e._isLiked,e._cardId).then((function(t){e._checkLiked(t.likes),e._toggleLike(),e._setLikesNumber(t.likes)})).catch((function(e){console.log(e)}))}))}},{key:"_setLikesNumber",value:function(e){this._likesCounter.textContent=e.length}},{key:"_checkLiked",value:function(e){var t=this;this._isLiked=e.some((function(e){return e._id===t._userId}))}},{key:"_checkRemoveDelButton",value:function(){this._cardOwnerId!==this._userId&&this._buttonDelete.remove()}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._buttonLike=this._element.querySelector(this.config.buttonLikeSelector),this._buttonDelete=this._element.querySelector(this.config.buttonDeleteSelector),this._elementImage=this._element.querySelector(this.config.imageSelector),this._elementName=this._element.querySelector(this.config.locationSelector),this._likesCounter=this._element.querySelector(this.config.likesCounterSelector),this._setEventListeners(),this._checkRemoveDelButton(),this._checkLiked(this._arrayOfLikes),this._isLiked&&this._toggleLike(),this._elementImage.src=this._link,this._elementImage.alt=this._name,this._elementName.textContent=this._name,this._setLikesNumber(this._arrayOfLikes),this._element}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e,t){"prepend"===t?this._container.prepend(e):"append"===t&&this._container.append(e)}},{key:"renderItem",value:function(e,t){this._renderer(e,t)}},{key:"renderItems",value:function(e,t){var n=this;e.forEach((function(e){n._renderer(e,t)}))}},{key:"deleteItem",value:function(e){e.remove()}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function F(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var H,J=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),F(this,"_showInputError",(function(e,t){var n=r._formElement.querySelector("".concat(r._spanErrorSelector).concat(e.id));e.classList.add(r._inputErrorClass),n.textContent=t,n.classList.add(r._errorClass)})),F(this,"_hideInputError",(function(e){var t=r._formElement.querySelector("".concat(r._spanErrorSelector).concat(e.id));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),this._formElement=n,this._inputSelector=t.inputSelector,this._errorSelector=t.errorSelector,this._spanErrorSelector=t.spanErrorSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inactiveButtonClass=t.inactiveButtonClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N={},z=new t({host:"https://mesto.nomoreparties.co/v1/cohort-47",token:"fecf0c0a-0938-47a0-bc3a-dfac6e5ffd59"}),M=new r({config:{nameSelector:".profile__name",aboutSelfSelector:".profile__about-self",profileImageSelector:".profile__image"},fetchUserInfo:function(e){return z.setUserInfo(e)},fetchUserAvatar:function(e){return z.setAvatar(e)}}),G=new v({popupSelector:".popup_contain_picture"}),K=new C({popupSelector:".popup_contain_edit-profile",handleFormSubmit:function(e){return M.setUserInfoOnServer(e)}}),Q=new C({popupSelector:".popup_contain_add-cards",handleFormSubmit:function(e){return z.addCard(e).then((function(e){return Y.renderItem(e,"prepend")})).catch((function(e){return console.log(e)}))}}),W=new C({popupSelector:".popup_contain_edit-avatar",handleFormSubmit:function(e){return M.setUserAvatarOnServer(e)}}),X=new q({popupSelector:".popup_contain_confirm",handleFormSubmit:function(e,t){z.deleteCard(e).then(Y.deleteItem(t))}}),Y=new D({renderer:function(e,t){var n=M.getUserId(),r=new B(e,a,n,Z,$,ee).generateCard();Y.addItem(r,t)}},".elements"),Z=function(e,t){G.open(e,t)},$=function(e,t){X.open(e,t)},ee=function(e,t){return z.toggleLike(e,t)};z.getUserInfo().then((function(e){M.setUserInfoOnClient(e),M.setUserAvatarOnClient(e),M.setUserId(e)})),z.getCards().then((function(e){Y.renderItems(e,"append")})),o.addEventListener("click",(function(){var e=M.getUserInfo();K.setinputValues(e),K.open(),N.editingForm.resetValidation()})),c.addEventListener("click",(function(){W.open(),N["edit-avatar"].resetValidation()})),i.addEventListener("click",(function(){Q.open(),N.addCards.resetValidation()})),G.setEventListeners(),K.setEventListeners(),Q.setEventListeners(),X.setEventListeners(),W.setEventListeners(),H={formSelector:".editing-form",inputSelector:".editing-form__input-line",errorSelector:".editing-form__input-error",spanErrorSelector:".editing-form__input-error_for_",submitButtonSelector:".editing-form__button",inputErrorClass:"editing-form__input-line_type_error",errorClass:"editing-form__input-error_active",inactiveButtonClass:"editing-form__button_inactive"},Array.from(document.querySelectorAll(H.formSelector)).forEach((function(e){var t=new J(H,e),n=e.getAttribute("name");N[n]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,